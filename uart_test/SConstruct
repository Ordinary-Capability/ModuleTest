import os
import sys
import rtconfig

if os.getenv('RTT_ROOT'):
    RTT_ROOT = os.getenv('RTT_ROOT')
else:
    RTT_ROOT = os.path.normpath(os.getcwd() + '../../../fh86xx-sdk/rt-thread-v21/')

if os.getenv('RTT_PLATFORM_ROOT'):
    RTT_PLATFORM_ROOT = os.getenv('RTT_PLATFORM_ROOT')
else:
    RTT_PLATFORM_ROOT = ''

if os.getenv('SDK_ROOT'):
    SDK_ROOT = os.getenv('SDK_ROOT')
else:
    SDK_ROOT = os.path.normpath(os.getcwd() + '../../../fh86xx-sdk')

if os.getenv('RT_CONFIG_H'):
    RT_CONFIG_H = os.getenv('RT_CONFIG_H')
else:
    RT_CONFIG_H = os.path.normpath(os.getcwd() + '/rtconfig.h')

#new add by zhangy to make rtconfig.h could add #include...
rtconfig.PLATFORM_DEF = [ SDK_ROOT + '/platform']   

APP_ROOT = os.path.normpath(os.getcwd())

sys.path = sys.path + [os.path.join(RTT_ROOT, 'tools')]
from building import *

TARGET = 'rtthread.' + rtconfig.TARGET_EXT

cflags = ''
for name in os.listdir('.'):
    if name.startswith('rtconfig_'):
        cflags += ' -include {}/{} '.format(APP_ROOT, name)

rtconfig.CFLAGS += cflags
rtconfig.AFLAGS += cflags

env = Environment(tools = ['mingw'],
    AS = rtconfig.AS, ASFLAGS = rtconfig.AFLAGS,
    CC = rtconfig.CC, CCFLAGS = rtconfig.CFLAGS,
    AR = rtconfig.AR, ARFLAGS = '-rc',
    LINK = rtconfig.LINK, LINKFLAGS = rtconfig.LFLAGS)
env.PrependENVPath('PATH', rtconfig.EXEC_PATH)

if env['PLATFORM'] == 'win32':
    env['ASCOM'] = '$AS $ASFLAGS $CCFLAGS $_CCCOMCOM -o $TARGET $SOURCES'

env['LIBSUFFIX'] = '.a'
# env['LIBPREFIX'] = ''

Export('RTT_ROOT')
Export('RTT_PLATFORM_ROOT')
Export('SDK_ROOT')
Export('APP_ROOT')
Export('rtconfig')
Export('RT_CONFIG_H')

# prepare building environment
objs = PrepareBuilding(env, RTT_ROOT)
objs += SConscript(APP_ROOT + '/SConscript_app',variant_dir='build/app', duplicate=0)
if RTT_PLATFORM_ROOT != '':
    rtt_platform_dir = RTT_PLATFORM_ROOT
else:
    rtt_platform_dir = SDK_ROOT
objs += SConscript(rtt_platform_dir + '/SConscript',variant_dir='build/rt-thread', duplicate=0)

# libc testsuite 
objs = objs + SConscript(RTT_ROOT + '/examples/libc/SConscript', variant_dir='build/examples/libc', duplicate=0)

if GetDepend('FH_BOOT_IN_2STAGE'):
    if 'objdump' not in rtconfig.POST_ACTION:
        rtconfig.POST_ACTION += '@' + rtconfig.OBJDUMP + ' -d ' + TARGET + '> ' + rtconfig.OUTPUT_DISNAME + '\n'
    rtconfig.POST_ACTION += '@' + RTT_ROOT + '/tools/gengz.sh ' + rtconfig.OUTPUT_NAME + '.' + rtconfig.TARGET_EXT + '\n'
    rtconfig.POST_ACTION += '@' + RTT_ROOT + '/tools/depcheck.py ' + rtconfig.OUTPUT_DISNAME + ' ' + rtconfig.OUTPUT_MAPNAME + '\n'
# make a building
DoBuilding(TARGET, objs)
